apiVersion: apps/v1
kind: Deployment
metadata:
  name: crawler-nbs-tetris-scheduler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        type: crawler-nbs-tetris-scheduler
    spec:
      imagePullSecrets:
        - name: dockercfg
      volumes:
      - name: bucket-key
        secret:
          secretName: bucket-key
      containers:
      - name: crawler-nbs-tetris-scheduler
        image: {repository}/scheduler-worker:{version}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "10m"
        volumeMounts:
          - name: bucket-key
            readOnly: true
            mountPath: /etc/secrets
        env:
        # Config
        - name: SCHEDULER_JOB_CLASS
          value: NBSTetrisSchedulerJob
        - name: SCHEDULER_QUEUE_CLASS
          value: NBSTetrisSchedulerQueue

        #Auth and Storage
        - name: AUTH_SERVER
          value: "http://haproxy-load-balancer:80/"

        # Scheduler RABBITMQ
        - name: SCHEDULER_RABBITMQ_QUEUE
          value: "crawler-nbs-tetris-scheduler"
        - name: SCHEDULER_RABBITMQ_HOST
          value: 'rabbitmq-main'
        - name: SCHEDULER_RABBITMQ_PORT
          value: '5672'
        - name: SCHEDULER_RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: rabbitmq-main-secrets
              key: username
        - name: SCHEDULER_RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-main-secrets
              key: password

        # Microsservice
        - name: MICROSERVICE_NAME
          value: 'crawler-nbs-tetris'
        - name: MICROSERVICE_URL
          value: 'http://haproxy-load-balancer:80/'
        - name: MICROSERVICE_USERNAME
          valueFrom:
            secretKeyRef:
              name: crawler-nbs-tetris
              key: microservice_username
        - name: MICROSERVICE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: crawler-nbs-tetris
              key: microservice_password

        ports:
        - containerPort: 5000
