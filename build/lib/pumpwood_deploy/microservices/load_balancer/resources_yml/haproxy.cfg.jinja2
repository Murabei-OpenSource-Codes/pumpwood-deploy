global
    log 127.0.0.1 local2
    maxconn 2000
    pidfile /var/run/haproxy.pid

    tune.ssl.default-dh-param 2048

    # SSL ciphers
    ssl-default-bind-options no-sslv3 no-tls-tickets
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

resolvers dns
    nameserver public-0 {{kube_dns_ip}}:53
    resolve_retries 10
    timeout retry 2s
    hold valid 30s
    # resolve_retries 3
    # timeout retry 1s
    # hold other 30s
    # hold refused 30s
    # hold nx 30s
    # hold timeout 30s
    # hold valid 10s

defaults
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  contstats
    option  http-server-close
    option log-health-checks
    retries 3
    option  redispatch
    timeout connect   5s
    timeout client   10s
    timeout server  600s
    # default-server init-addr last,libc,none

    # make sure log-format is on a single line
    log global


listen stats
    bind *:1936
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy
    stats auth {{user}}:{{password}}


#########################
######pumpwoodnodes######
#########################
frontend pumpwoodnodes
    bind *:80
    mode http

    ########
    ##Admins
    ########
    {% for auth_acl in admin_acls %}
    acl {{ auth_acl['acl_name'] }} url_beg -i {{ auth_acl['url_beg'] }}
    use_backend {{ auth_acl['backend'] }} if {{ auth_acl['acl_name'] }}
    {% endfor %}

    ###############
    ##Health-Checks
    ###############
    {% for health in srvs_with_health_check %}
    acl {{ health['acl_name'] }} url_beg -i {{ health['service'] }}
    use_backend {{ health['backend'] }} if {{ health['acl_name'] }}
    {% endfor %}

    ########
    ########
    ##Acls##
    ########
    {% for acl in acls %}
    acl {{ acl['acl_name'] }} url_beg -i {{ acl['url_path'] }}
    use_backend {{ acl['backend'] }} if {{ acl['acl_name'] }}
    {% endfor %}

#########
#########
##Admin##
{% for admin_back in admin_backends %}
backend {{ admin_back['backend'] }}
    server host1 {{ admin_back['service'] }}:80 check resolvers dns check inter 1000
{% endfor %}

############
############
##Services##
############
{% for service in services %}
backend {{ service['backend'] }}
    server host1 {{ service['service'] }}:80 check resolvers dns check inter 1000
{% endfor %}
