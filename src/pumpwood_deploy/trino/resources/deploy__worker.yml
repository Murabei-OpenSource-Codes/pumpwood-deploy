apiVersion : "apps/v1"
kind: Deployment
metadata:
  name: trino-worker
spec:
  replicas: {replicas}
  selector:
    matchLabels:
      type: db
      endpoint: trino
      function: worker
  template:
    metadata:
      labels:
          type: db
          endpoint: trino
          function: worker
    spec:
      imagePullSecrets:
        - name: dockercfg
      volumes:
      - name: trino--catalog-file-secret
        secret:
          secretName: trino--catalog-file-secret
      - name: gcp--storage-key
        secret:
          secretName: gcp--storage-key
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: function
                operator: NotIn
                values:
                - system
      containers:
      - name: trino-worker
        image: andrebaceti/trino-worker:430-1.2
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "{requests_memory}"
            cpu:  "{requests_cpu}"
          limits:
            memory: "{limits_memory}"
            cpu:  "{limits_cpu}"
        volumeMounts:
          - name: trino--catalog-file-secret
            readOnly: true
            mountPath: /catalog
          - name: gcp--storage-key
            readOnly: true
            mountPath: /etc/secrets
        ports:
        - containerPort: 8080
        env:
        - name: SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: trino
              key: shared_secret
---
apiVersion : "v1"
kind: Service
metadata:
  name: trino-worker
  labels:
      type: app
      endpoint: trino-worker
      function: dashboard
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
      type: db
      endpoint: trino
      function: worker
